generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum for distinguishing vehicle types
enum AdType {
  CAR
  VAN
  JEEP
  LORRY
  BIKE
  CREWCAB
  PICKUP
  BUS
  TRUCK
  THREEWHEEL
  TRACTOR
  HEAVYDUTY
  OTHER
}

// Other Enums
enum GearType {
  AUTOMATIC
  MANUAL
  SEMI_AUTOMATIC
}

enum FuelType {
  PETROL
  DIESEL
  ELECTRIC
  HYBRID
}

enum StartType {
  ELECTRIC
  KICK
}

enum BikeType {
  FUEL
  ELECTRIC
}

model Ad {
  adId        Int       @id @default(autoincrement())
  price       Int
  brand       String    @db.VarChar(50)
  model       String    @db.VarChar(50)
  year        Int
  mileage     Int
  vehicleType AdType    // Enum to distinguish vehicle types

  engine      Int  
  details     String?   @db.Text
  posted      Boolean
  postedAt    DateTime  @default(now())
  userId      Int
  user        User      @relation(fields: [userId], references: [userId])

  images      String[]  @db.Text  // Array to store multiple images

  // Unique fields for vehicles
  gear        GearType?  // Only relevant for vehicles
  fuelType    FuelType?  // Only relevant for vehicles

  // Unique fields for bikes
  startType   StartType?  // Only relevant for bikes
  bikeType    BikeType?   // Only relevant for bikes

  // Indexes for frequently queried fields
  @@index([postedAt])
  @@index([price])
  
  PromotedItem PromotedItem[]
}

model User {
  userId       Int      @id @default(autoincrement())
  username     String   @db.VarChar(50)
  userEmail    String   @unique @db.VarChar(100)
  userPhone    String   @db.VarChar(15)
  userCity     String   @db.VarChar(50)
  userDistrict String   @db.VarChar(50)
  password     String?  @db.VarChar(255)  // Nullable password field

  // Relations
  ads          Ad[]     // Users can have multiple ads

  // Optional field to track onboarding status
  isOnboarded  Boolean  @default(false)
}

model PromotedItem {
  id                Int      @id @default(autoincrement())
  adId              Int?
  ad                Ad?      @relation(fields: [adId], references: [adId])
  createdAt         DateTime @default(now())
  
  // Expiration date for the promotion
  promotionExpiresAt DateTime

  // Field to indicate if this promotion is featured or not
  featured          Boolean  @default(false)

  // Index for sorting/filtering promoted items
  @@index([createdAt])
}
