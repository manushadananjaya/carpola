generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum for distinguishing vehicle types
enum AdType {
  CAR
  VAN
  JEEP
  LORRY
  BIKE
  CREWCAB
  PICKUP
  BUS
  TRUCK
  THREEWHEEL
  TRACTOR
  HEAVYDUTY
  OTHER
}

// Other Enums
enum GearType {
  AUTOMATIC
  MANUAL
  SEMI_AUTOMATIC
}

enum FuelType {
  PETROL
  DIESEL
  ELECTRIC
  HYBRID
}

enum StartType {
  ELECTRIC
  KICK
}

enum BikeType {
  FUEL
  ELECTRIC
}
model Ad {
  adId        Int       @id @default(autoincrement())
  price       Decimal   @db.Decimal(10, 2)
  brand       String    @db.VarChar(50)
  model       String    @db.VarChar(50)
  year        Int      
  mileage     Int       
  vehicleType AdType

  engine      Int  
  details     String?   @db.Text
  posted      Boolean   @default(false)
  postedAt    DateTime? @default(now())

  userId      Int
  user        User      @relation(fields: [userId], references: [userId])

  images      String[]  @db.Text

  gear        GearType?
  fuelType    FuelType?

  startType   StartType?
  bikeType    BikeType?

  PromotedItem PromotedItem[]

  @@index([posted, postedAt, price])
  @@index([vehicleType, price])
  @@index([year])
  @@index([brand, model])
}

model User {
  userId       Int      @id @default(autoincrement())
  username     String   @db.VarChar(50)
  userEmail    String   @unique @db.VarChar(100)
  userPhone    String
  userCity     String   @db.VarChar(50)
  userDistrict String   @db.VarChar(50)
  password     String?  @db.VarChar(255)

  ads          Ad[]
  isOnboarded  Boolean  @default(false)
}

model PromotedItem {
  id                Int      @id @default(autoincrement())
  adId              Int?
  ad                Ad?      @relation(fields: [adId], references: [adId], onDelete: Cascade)
  createdAt         DateTime @default(now())
  promotionExpiresAt DateTime
  featured          Boolean  @default(false)
  

  @@index([createdAt])

}
